<?php
namespace Hbase;

/**
 * Autogenerated by Thrift Compiler (0.14.0)
 *
 * DO NOT EDIT UNLESS YOU ARE SURE THAT YOU KNOW WHAT YOU ARE DOING
 *  @generated
 */
use Thrift\Base\TBase;
use Thrift\Type\TType;
use Thrift\Type\TMessageType;
use Thrift\Exception\TException;
use Thrift\Exception\TProtocolException;
use Thrift\Protocol\TProtocol;
use Thrift\Protocol\TBinaryProtocolAccelerated;
use Thrift\Exception\TApplicationException;

/**
 * An Append object is used to specify the parameters for performing the append operation.
 */
class TAppend extends TBase
{
    static public $isValidate = false;

    static public $_TSPEC = array(
        1 => array(
            'var' => 'table',
            'isRequired' => false,
            'type' => TType::STRING,
        ),
        2 => array(
            'var' => 'row',
            'isRequired' => false,
            'type' => TType::STRING,
        ),
        3 => array(
            'var' => 'columns',
            'isRequired' => false,
            'type' => TType::LST,
            'etype' => TType::STRING,
            'elem' => array(
                'type' => TType::STRING,
                ),
        ),
        4 => array(
            'var' => 'values',
            'isRequired' => false,
            'type' => TType::LST,
            'etype' => TType::STRING,
            'elem' => array(
                'type' => TType::STRING,
                ),
        ),
    );

    /**
     * @var string
     */
    public $table = null;
    /**
     * @var string
     */
    public $row = null;
    /**
     * @var string[]
     */
    public $columns = null;
    /**
     * @var string[]
     */
    public $values = null;

    public function __construct($vals = null)
    {
        if (is_array($vals)) {
            parent::__construct(self::$_TSPEC, $vals);
        }
    }

    public function getName()
    {
        return 'TAppend';
    }


    public function read($input)
    {
        return $this->_read('TAppend', self::$_TSPEC, $input);
    }


    public function write($output)
    {
        return $this->_write('TAppend', self::$_TSPEC, $output);
    }

}
